# print all messages with at least INFO level to standard out and standard error
log4j.rootLogger=INFO, stdout, stderr, FILE

# print messages with at least level WARN to standard error
log4j.appender.stderr = org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Threshold = WARN
log4j.appender.stderr.Target = System.err
log4j.appender.stderr.layout = org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern = %d{ISO8601} [ %-5p%x ] >> %m%n

# print all remaining messages to standard out
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %d{ISO8601} [ %-5p%x ] >> %m%n
log4j.appender.stdout.filter.filter1 = org.apache.log4j.varia.LevelRangeFilter
log4j.appender.stdout.filter.filter1.levelMax = INFO


# file appender
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=data/logs/log.txt
# Set the immediate flush to true (default)
log4j.appender.FILE.ImmediateFlush=true
# Set the threshold to debug mode
log4j.appender.FILE.Threshold=debug
# Set the append to false, overwrite
log4j.appender.FILE.Append=true
# Define the layout for file appender
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.conversionPattern=%d{ISO8601} [ %-5p%x ] %c >> %m%n